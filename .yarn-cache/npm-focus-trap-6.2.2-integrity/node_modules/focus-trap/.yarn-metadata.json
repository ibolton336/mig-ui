{
  "manifest": {
    "name": "focus-trap",
    "version": "6.2.2",
    "description": "Trap focus within a DOM node.",
    "main": "dist/focus-trap.js",
    "module": "dist/focus-trap.esm.js",
    "types": "index.d.ts",
    "sideEffects": false,
    "files": [
      "package.json",
      "README.md",
      "CHANGELOG.md",
      "SECURITY.md",
      "LICENSE",
      "index.js",
      "index.d.ts",
      "dist"
    ],
    "scripts": {
      "demo-bundle": "browserify demo/js/index.js -o demo/demo-bundle.js",
      "format": "prettier --write \"{*,src/**/*,test/**/*,demo/js/**/*,.github/workflows/*,cypress/**/*}.+(js|yml)\"",
      "format:check": "prettier --check \"{*,src/**/*,test/**/*,demo/js/**/*,.github/workflows/*,cypress/**/*}.+(js|yml)\"",
      "lint": "eslint \"*.js\" \"demo/**/*.js\" \"cypress/**/*.js\"",
      "clean": "rm -rf ./dist",
      "compile:esm": "BUILD_ENV=esm BABEL_ENV=esm rollup -c",
      "compile:cjs": "BUILD_ENV=cjs BABEL_ENV=es5 rollup -c",
      "compile:umd": "BUILD_ENV=umd BABEL_ENV=es5 rollup -c",
      "compile": "yarn compile:esm && yarn compile:cjs && yarn compile:umd",
      "build": "yarn clean && yarn compile",
      "start": "yarn compile:cjs && budo demo/js/index.js:demo-bundle.js --dir demo --live -- -t babelify",
      "test:types": "tsc index.d.ts",
      "test:unit": "echo \"No unit tests to run!\"",
      "test:cypress": "start-server-and-test start 9966 'cypress open'",
      "test:cypress-ci": "start-server-and-test start 9966 'cypress run --browser $CYPRESS_BROWSER --headless'",
      "test": "yarn format:check && yarn lint && yarn test:unit && yarn test:types && CYPRESS_BROWSER=chrome yarn test:cypress-ci",
      "prepare": "yarn build",
      "release": "yarn build && changeset publish"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/focus-trap/focus-trap.git"
    },
    "keywords": [
      "focus",
      "accessibility",
      "trap",
      "capture",
      "keyboard",
      "modal"
    ],
    "author": {
      "name": "David Clark",
      "url": "http://davidtheclark.com/"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/focus-trap/focus-trap/issues"
    },
    "homepage": "https://github.com/focus-trap/focus-trap#readme",
    "dependencies": {
      "tabbable": "^5.1.4"
    },
    "devDependencies": {
      "@babel/cli": "^7.12.8",
      "@babel/core": "^7.12.9",
      "@babel/preset-env": "^7.12.7",
      "@changesets/cli": "^2.12.0",
      "@rollup/plugin-babel": "^5.2.2",
      "@rollup/plugin-commonjs": "^17.0.0",
      "@rollup/plugin-node-resolve": "^11.0.0",
      "@testing-library/cypress": "^7.0.2",
      "@types/jquery": "^3.5.4",
      "all-contributors-cli": "^6.19.0",
      "babel-eslint": "^10.1.0",
      "babel-loader": "^8.2.2",
      "babelify": "^10.0.0",
      "browserify": "^17.0.0",
      "budo": "^11.6.4",
      "cypress": "^6.0.1",
      "cypress-plugin-tab": "^1.0.5",
      "eslint": "^7.14.0",
      "eslint-config-prettier": "^6.15.0",
      "eslint-plugin-cypress": "^2.11.2",
      "prettier": "^2.2.1",
      "rollup": "^2.34.0",
      "rollup-plugin-sourcemaps": "^0.6.3",
      "rollup-plugin-terser": "^7.0.1",
      "start-server-and-test": "^1.11.6",
      "typescript": "^4.1.2"
    },
    "_registry": "npm",
    "_loc": "/Users/ibolton/Library/Caches/Yarn/v6/npm-focus-trap-6.2.2-integrity/node_modules/focus-trap/package.json",
    "readmeFilename": "README.md",
    "readme": "# focus-trap [![CI](https://github.com/focus-trap/focus-trap/workflows/CI/badge.svg?branch=master&event=push)](https://github.com/focus-trap/focus-trap/actions?query=workflow:CI+branch:master) [![license](https://badgen.now.sh/badge/license/MIT)](./LICENSE)\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-12-orange.svg?style=flat-square)](#contributors)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\nTrap focus within a DOM node.\n\nThere may come a time when you find it important to trap focus within a DOM node — so that when a user hits `Tab` or `Shift+Tab` or clicks around, she can't escape a certain cycle of focusable elements.\n\nYou will definitely face this challenge when you are trying to build **accessible modals**.\n\nThis module is a little, modular **vanilla JS** solution to that problem.\n\nUse it in your higher-level components. For example, if you are using React check out [focus-trap-react](https://github.com/focus-trap/focus-trap-react), a light wrapper around this library. If you are not a React user, consider creating light wrappers in your framework-of-choice.\n\n## What it does\n\nWhen a focus trap is activated, this is what should happen:\n\n- Some element within the focus trap receives focus. By default, this will be the first element in the focus trap's tab order (as determined by [tabbable](https://github.com/focus-trap/tabbable)). Alternately, you can specify an element that should receive this initial focus.\n- The `Tab` and `Shift+Tab` keys will cycle through the focus trap's tabbable elements *but will not leave the focus trap*.\n- Clicks within the focus trap behave normally; but clicks *outside* the focus trap are blocked.\n- The `Escape` key will deactivate the focus trap.\n\nWhen the focus trap is deactivated, this is what should happen:\n\n- Focus is passed to *whichever element had focus when the trap was activated* (e.g. the button that opened the modal or menu).\n- Tabbing and clicking behave normally everywhere.\n\n[Check out the demos.](http://focus-trap.github.io/focus-trap/demo/)\n\nFor more advanced usage (e.g. focus traps within focus traps), you can also pause a focus trap's behavior without deactivating it entirely, then unpause at will.\n\n## Installation\n\n```\nnpm install focus-trap\n```\n\nYou can also use a UMD version published to `unpkg.com` as `dist/focus-trap.js` and `dist/focus-trap.min.js`.\n\n## Browser Support\n\nIE9+\n\nWhy?\nBecause this module uses [`EventTarget.addEventListener()`](document.createElement('button')).\nAnd its only dependency, tabbable, uses [a couple of IE9+ functions](https://github.com/focus-trap/tabbable#browser-support).\n\n## Usage\n\n### createFocusTrap(element[, createOptions])\n\n```javascript\nimport { createFocusTrap } from 'focus-trap'; // ESM\nconst { createFocusTrap } = require('focus-trap'); // CJS\n\nfocusTrap = createFocusTrap(element[, createOptions]);\n```\n\nReturns a new focus trap on `element` (one or more \"containers\" of tabbable nodes that, together, form the total set of nodes that can be visited, with clicks or the tab key, within the trap).\n\n`element` can be\n- a DOM node (the focus trap itself);\n- a selector string (which will be passed to `document.querySelector()` to find the DOM node); or\n- an array of DOM nodes or selector strings (where the order determines where the focus will go after the last tabbable element of a DOM node/selector is reached).\n\n> A focus trap must have at least one container with at least one tabbable/focusable node in it to be considered valid. While nodes can be added/removed at runtime, with the trap adjusting to added/removed tabbable nodes, __an error will be thrown__ if the trap ever gets into a state where it determines none of its containers have any tabbable nodes in them _and_ the `fallbackFocus` option does not resolve to an alternate node where focus can go.\n\n`createOptions`:\n\n- **onActivate** {function}: A function that will be called when the focus trap activates.\n- **onDeactivate** {function}: A function that will be called when the focus trap deactivates,\n- **initialFocus** {element|string|function}: By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus. With this option you can specify a different element to receive that initial focus. Can be a DOM node, or a selector string (which will be passed to `document.querySelector()` to find the DOM node), or a function that returns a DOM node.\n- **fallbackFocus** {element|string|function}: By default, an error will be thrown if the focus trap contains no elements in its tab order. With this option you can specify a fallback element to programmatically receive focus if no other tabbable elements are found. For example, you may want a popover's `<div>` to receive focus if the popover's content includes no tabbable elements. *Make sure the fallback element has a negative `tabindex` so it can be programmatically focused.* The option value can be a DOM node, a selector string (which will be passed to `document.querySelector()` to find the DOM node), or a function that returns a DOM node.\n- **escapeDeactivates** {boolean}: Default: `true`. If `false`, the `Escape` key will not trigger deactivation of the focus trap. This can be useful if you want to force the user to make a decision instead of allowing an easy way out.\n- **clickOutsideDeactivates** {boolean}: Default: `false`. If `true`, a click outside the focus trap will deactivate the focus trap and allow the click event to do its thing. This option **takes precedence** over `allowOutsideClick` when it's set to `true`.\n- **allowOutsideClick** {boolean|(e: MouseEvent) => boolean}: If set and is or returns `true`, a click outside the focus trap will not be prevented, even when `clickOutsideDeactivates` is `false`. When `clickOutsideDeactivates` is `true`, this option is **ignored** (i.e. if it's a function, it will not be called). Use this option to control if (and even which) clicks are allowed outside the trap in conjunction with `clickOutsideDeactivates: false`.\n- **returnFocusOnDeactivate** {boolean}: Default: `true`. If `false`, when the trap is deactivated, focus will *not* return to the element that had focus before activation.\n- **setReturnFocus** {element|string|function}: By default, focus trap on deactivation will return to the element that was focused before activation. With this option you can specify another element to programmatically receive focus after deactivation. Can be a DOM node, or a selector string (which will be passed to `document.querySelector()` to find the DOM node), or a function that returns a DOM node.\n- **preventScroll** {boolean}: By default, focus() will scroll to the element if not in viewport. It can produce unintended effects like scrolling back to the top of a modal. If set to `true`, no scroll will happen.\n- **delayInitialFocus** {boolean}: Default: `true`. Delays the autofocus when the focus trap is activated. This prevents elements within the focusable element from capturing the event that triggered the focus trap activation.\n\n### focusTrap.activate([activateOptions])\n\nActivates the focus trap, adding various event listeners to the document.\n\nIf focus is already within it the trap, it remains unaffected. Otherwise, focus-trap will try to focus the following nodes, in order:\n\n- `createOptions.initialFocus`\n- The first tabbable node in the trap\n- `createOptions.fallbackFocus`\n\nIf none of the above exist, an error will be thrown. You cannot have a focus trap that lacks focus.\n\nReturns the `focusTrap`.\n\n`activateOptions`:\n\nThese options are used to override the focus trap's default behavior for this particular activation.\n\n- **onActivate** {function | null | false}: Default: whatever you chose for `createOptions.onActivate`. `null` or `false` are the equivalent of a `noop`.\n\n### focusTrap.deactivate([deactivateOptions])\n\nDeactivates the focus trap.\n\nReturns the `focusTrap`.\n\n`deactivateOptions`:\n\nThese options are used to override the focus trap's default behavior for this particular deactivation.\n\n- **returnFocus** {boolean}: Default: whatever you chose for `createOptions.returnFocusOnDeactivate`.\n- **onDeactivate** {function | null | false}: Default: whatever you chose for `createOptions.onDeactivate`. `null` or `false` are the equivalent of a `noop`.\n\n### focusTrap.pause()\n\nPause an active focus trap's event listening without deactivating the trap.\n\nIf the focus trap has not been activated, nothing happens.\n\nReturns the `focusTrap`.\n\nAny `onDeactivate` callback will not be called, and focus will not return to the element that was focused before the trap's activation. But the trap's behavior will be paused.\n\nThis is useful in various cases, one of which is when you want one focus trap within another. `demo-six` exemplifies how you can implement this.\n\n### focusTrap.unpause()\n\nUnpause an active focus trap. (See `pause()`, above.)\n\nFocus is forced into the trap just as described for `focusTrap.activate()`.\n\nIf the focus trap has not been activated or has not been paused, nothing happens.\n\nReturns the `focusTrap`.\n\n### focusTrap.updateContainerElements()\n\nUpdate the element(s) that are used as containers for the focus trap.\n\nWhen you call the function `createFocusTrap`, you pass in an element (or selector), or an array of elements (or selectors) to keep the focus within.  This method simply allows you to update which elements to keep the focus within.\n\nA use case for this is found in focus-trap-react, where React `ref`'s may not be initialized yet, but when they are you want to have them be a container element.\n\nReturns the `focusTrap`.\n\n## Examples\n\nRead code in `demo/` and [see how it works](http://focus-trap.github.io/focus-trap/demo/).\n\nHere's what happens in `default.js` (the \"default behavior\" demo):\n\n```js\nconst { createFocusTrap } = require('../../dist/focus-trap');\n\nconst container = document.getElementById('default');\n\nconst focusTrap = createFocusTrap('#default', {\n  onActivate: function () {\n    container.className = 'trap is-active';\n  },\n  onDeactivate: function () {\n    container.className = 'trap';\n  },\n});\n\ndocument\n  .getElementById('activate-default')\n  .addEventListener('click', function () {\n    focusTrap.activate();\n  });\n\ndocument\n  .getElementById('deactivate-default')\n  .addEventListener('click', function () {\n    focusTrap.deactivate();\n  });\n```\n\n## Other details\n\n### One at a time\n\n*Only one focus trap can be listening at a time.* If a second focus trap is activated the first will automatically pause. The first trap is unpaused and again traps focus when the second is deactivated.\n\nFocus trap manages a queue of traps: if A activates; then B activates, pausing A; then C activates, pausing B; when C then deactivates, B is unpaused; and when B then deactivates, A is unpaused.\n\n### Use predictable elements for the first and last tabbable elements in your trap\n\nThe focus trap will work best if the *first* and *last* focusable elements in your trap are simple elements that all browsers treat the same, like buttons and inputs.**\n\nTabbing will work as expected with trickier, less predictable elements — like iframes, shadow trees, audio and video elements, etc. — as long as they are *between* more predictable elements (that is, if they are not the first or last tabbable element in the trap).\n\nThis limitation is ultimately rooted in browser inconsistencies and inadequacies, but it comes to focus-trap through its dependency [Tabbable](https://github.com/focus-trap/tabbable). You can read about more details [in the Tabbable documentation](https://github.com/focus-trap/tabbable#more-details).\n\n### Your trap should include a tabbable element or a focusable container\n\nYou can't have a focus trap without focus, so an error will be thrown if you try to initialize focus-trap with an element that contains no tabbable nodes.\n\nIf you find yourself in this situation, you should give you container `tabindex=\"-1\"` and set it as `initialFocus` or `fallbackFocus`. A couple of demos illustrate this.\n\n## Development\n\nBecause of the nature of the functionality, involving keyboard and click and (especially) focus events, JavaScript unit tests don't make sense. After all, JSDom does not fully support focus events. Since the demo was developed to also be the test, we use Cypress to automate running through all demos in the demo page.\n\n# Contributing\n\nSee [CONTRIBUTING](CONTRIBUTING.md).\n\n## Contributors\n\nIn alphabetical order:\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://davidtheclark.com/\"><img src=\"https://avatars2.githubusercontent.com/u/628431?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>David Clark</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=davidtheclark\" title=\"Code\">💻</a> <a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3Adavidtheclark\" title=\"Bug reports\">🐛</a> <a href=\"#infra-davidtheclark\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=davidtheclark\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=davidtheclark\" title=\"Documentation\">📖</a> <a href=\"#maintenance-davidtheclark\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://stefancameron.com/\"><img src=\"https://avatars3.githubusercontent.com/u/2855350?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stefan Cameron</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=stefcameron\" title=\"Code\">💻</a> <a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3Astefcameron\" title=\"Bug reports\">🐛</a> <a href=\"#infra-stefcameron\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=stefcameron\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=stefcameron\" title=\"Documentation\">📖</a> <a href=\"#maintenance-stefcameron\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/liunate\"><img src=\"https://avatars2.githubusercontent.com/u/38996291?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nate Liu</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=liunate\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sadick254\"><img src=\"https://avatars2.githubusercontent.com/u/5238135?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sadick</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=sadick254\" title=\"Code\">💻</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=sadick254\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=sadick254\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/michael-ar\"><img src=\"https://avatars3.githubusercontent.com/u/18557997?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michael Reynolds</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3Amichael-ar\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://seanmcp.com/\"><img src=\"https://avatars1.githubusercontent.com/u/6360367?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sean McPherson</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=SeanMcP\" title=\"Code\">💻</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=SeanMcP\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/features/security\"><img src=\"https://avatars1.githubusercontent.com/u/27347476?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dependabot</b></sub></a><br /><a href=\"#maintenance-dependabot\" title=\"Maintenance\">🚧</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://recollectr.io\"><img src=\"https://avatars2.githubusercontent.com/u/6835891?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Slapbox</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3ASlapbox\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bparish628\"><img src=\"https://avatars1.githubusercontent.com/u/8492971?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Benjamin Parish</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3Abparish628\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://scottblinch.me/\"><img src=\"https://avatars2.githubusercontent.com/u/4682114?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Scott Blinch</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=scottblinch\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://clintgoodman.com\"><img src=\"https://avatars3.githubusercontent.com/u/5473697?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Clint Goodman</b></sub></a><br /><a href=\"https://github.com/focus-trap/focus-trap/commits?author=cgood92\" title=\"Code\">💻</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=cgood92\" title=\"Documentation\">📖</a> <a href=\"#example-cgood92\" title=\"Examples\">💡</a> <a href=\"https://github.com/focus-trap/focus-trap/commits?author=cgood92\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/zioth\"><img src=\"https://avatars3.githubusercontent.com/u/945603?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Zioth</b></sub></a><br /><a href=\"#ideas-zioth\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/focus-trap/focus-trap/issues?q=author%3Azioth\" title=\"Bug reports\">🐛</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-2016 David Clark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/focus-trap/-/focus-trap-6.2.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/focus-trap/-/focus-trap-6.2.2.tgz",
    "hash": "",
    "integrity": "sha512-qWovH9+LGoKqREvJaTCzJyO0hphQYGz+ap5Hc4NqXHNhZBdxCi5uBPPcaOUw66fHmzXLVwvETLvFgpwPILqKpg==",
    "registry": "npm",
    "packageName": "focus-trap",
    "cacheIntegrity": "sha512-qWovH9+LGoKqREvJaTCzJyO0hphQYGz+ap5Hc4NqXHNhZBdxCi5uBPPcaOUw66fHmzXLVwvETLvFgpwPILqKpg== sha1-Dm85FBWwaXyZ2pMnAt7dEwhPoTE="
  },
  "registry": "npm",
  "hash": "a96a2f1fdf8b1a82aa444bc96930b32723b4869850606cfe6a9e4773836a5c73616417710a2e6e04f3dc68e530eba7c79b35cb570bc44cbbc5829c0f20ba8aa6"
}